import React, { useState } from 'react';
import ImageUpload from '../components/ImageUpload';

enum VehicleType {
  CAR = 'car',
  BIKE = 'bike',
  SCOOTER = 'scooter'
}

type DetailType = 'seats' | 'settings' | 'engine' | 'fuel' | 'range' | 'speed';

interface VehicleDetails {
  type: DetailType;
  text: string;
}

interface FormProps {
  id: number | null;
  type: VehicleType;    
  title: string;
  image: string;
  description: string;
  details: VehicleDetails[];
  price: string;
}

const AddVehiclesForm = () => {
    const [selectedType, setSelectedType] = useState('CAR');
    const [formData, setFormData] = useState<FormProps>({
        id: null,
        type: VehicleType.CAR,
        title: '',
        image: '',
        description: '',
        details: [],
        price: '',
    });

//   const [detailInput, setDetailInput] = useState<VehicleDetails>({
//     type: "seats",
//     text: ''
//   });

  const vehicleConfig = {
    CAR: {
        fields: ['seat', 'settings']
    },
    BIKE: {
        fields: ['engine', 'fuel']
    },
    SCOOTER: {
        fields: ['range', 'fuel']
    }
  }

    const handleVehicleChange = (field, value) => {
        setFormData(prev => ({ ...prev, [field]: value }));
    };

    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
        const { name, value } = e.target;
        setFormData(prev => ({
        ...prev,
        [name]: value
        }));
    };

  const renderFields = () => {
    if(!selectedType) return null;
    return vehicleConfig[selectedType].fields.map(field => (
       <div key={field} className="mb-4">
         <label className="block text-sm font-medium text-gray-700 mb-1.5 capitalize">
            {field}  
        </label>
        <input
          type="text"
          className="w-full px-4 py-2.5 text-gray-700 border border-gray-300 rounded-lg 
                focus:ring-2 focus:ring-blue-500 focus:border-blue-500 
                transition-all duration-200 placeholder-gray-400"
          value={formData[field] || ''}
          onChange={(e) => handleVehicleChange(field, e.target.value)}
        />
      </div>
    ))
  }


  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    const newVehicle = {
      ...formData,
      id: Date.now(), // Temporary ID, should be generated by backend
      price: Number(formData.price),
      details: [...formData.details]
    };
    console.log('New vehicle:', newVehicle);
    // Here you would typically send the data to your backend API
  };

  return (
     <div className="min-h-screen bg-gray-50 flex items-center justify-center p-4">
  <div className="bg-white p-8 rounded-lg shadow-lg w-full max-w-2xl">
    <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">Vehicle Listing Form</h2>
    
    <div className="grid md:grid-cols-2 gap-6">
      {/* Vehicle Type Selection */}
      <div className="md:col-span-2">
        <label className="block text-gray-700 text-sm font-medium mb-2">Select Vehicle Type</label>
        <select
          className="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
          value={selectedType}
          onChange={(e) => {
            setSelectedType(e.target.value);
            setFormData({});
          }}
        >
          <option value="">-- Select Vehicle Type --</option>
          {Object.keys(vehicleConfig).map(type => (
            <option key={type} value={type} className="capitalize">{type}</option>
          ))}
        </select>
      </div>

      {/* Image Upload */}
      <div className="md:col-span-2">
        <label className="block text-gray-700 text-sm font-medium mb-2">Vehicle Images</label>
        <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-blue-400 transition-colors">
          <ImageUpload/>
          <p className="mt-2 text-sm text-gray-500">Upload high-quality photos of your vehicle</p>
        </div>
      </div>

      {/* Title */}
      <div>
        <label className="block text-gray-700 text-sm font-medium mb-2" htmlFor="title">
          Title
        </label>
        <input
          type="text"
          id="title"
          name="title"
          value={formData.title}
          onChange={handleChange}
          className="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
          placeholder="e.g. 2022 Tesla Model 3"
          required
        />
      </div>

      {/* Price */}
      <div>
        <label className="block text-gray-700 text-sm font-medium mb-2" htmlFor="price">
          Price (per day)*
        </label>
        <div className="relative">
          <span className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500">Rs.</span>
          <input
            type="number"
            id="price"
            name="price"
            value={formData.price}
            onChange={handleChange}
            className="w-full pl-8 pr-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
            min="0"
            step="1"
            placeholder="0.00"
            required
          />
        </div>
      </div>

      {/* Description */}
      <div className="md:col-span-2">
        <label className="block text-gray-700 text-sm font-medium mb-2" htmlFor="description">
          Description*
        </label>
        <textarea
          id="description"
          name="description"
          value={formData.description}
          onChange={handleChange}
          rows={4}
          className="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
          placeholder="Describe your vehicle's features, condition, and any special details..."
          required
        ></textarea>
      </div>

      {/* Dynamic Fields */}
      {renderFields()}
    </div>

    {/* Submit Button */}
    {selectedType && (
      <div className="mt-6 flex justify-end">
        <button
          className="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg shadow-md transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
          onClick={() => alert(JSON.stringify(formData, null, 2))}
        >
          Submit Vehicle
        </button>
      </div>
    )}
  </div>
</div>
  );
};

export default AddVehiclesForm;